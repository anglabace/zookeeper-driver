<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.sagesource.zookeeperdriver.mapper.ZkServerInfoMapper" >
  <resultMap id="BaseResultMap" type="org.sagesource.zookeeperdriver.entity.ZkServerInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="servers" property="servers" jdbcType="VARCHAR" />
    <result column="isUse" property="isuse" jdbcType="CHAR" />
    <result column="retry_sleep_time" property="retrySleepTime" jdbcType="INTEGER" />
    <result column="retry_times" property="retryTimes" jdbcType="INTEGER" />
    <result column="conn_timeout" property="connTimeout" jdbcType="INTEGER" />
    <result column="session_timeout" property="sessionTimeout" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from zk_server_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.sagesource.zookeeperdriver.entity.ZkServerInfo" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into zk_server_info (servers, isUse, retry_sleep_time, 
      retry_times, conn_timeout, session_timeout, 
      create_time, update_time)
    values (#{servers,jdbcType=VARCHAR}, #{isuse,jdbcType=CHAR}, #{retrySleepTime,jdbcType=INTEGER}, 
      #{retryTimes,jdbcType=INTEGER}, #{connTimeout,jdbcType=INTEGER}, #{sessionTimeout,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="org.sagesource.zookeeperdriver.entity.ZkServerInfo" >
    update zk_server_info
    set servers = #{servers,jdbcType=VARCHAR},
      isUse = #{isuse,jdbcType=CHAR},
      retry_sleep_time = #{retrySleepTime,jdbcType=INTEGER},
      retry_times = #{retryTimes,jdbcType=INTEGER},
      conn_timeout = #{connTimeout,jdbcType=INTEGER},
      session_timeout = #{sessionTimeout,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, servers, isUse, retry_sleep_time, retry_times, conn_timeout, session_timeout, 
    create_time, update_time
    from zk_server_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, servers, isUse, retry_sleep_time, retry_times, conn_timeout, session_timeout, 
    create_time, update_time
    from zk_server_info
  </select>
</mapper>